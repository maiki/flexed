/// Function to get color of a shade from color-map.
///
/// @group utility
///
/// @param {color} $color - Color (aorange, agreen, ablue or agray)
///
///
/// @param {shade} $shade - Shade (base, light, lighter, dark, darker)
///
///
/// @example scss - Example
/// .example-el {
///     background: color(agray, lighter);
///     color: color(ablue); // base blue
/// }
///
/// @example scss - Output
/// .example-el {
///     background: #dfdfdf;
///     color: #00abde;
/// }
@function color($color, $shade: base) { // Default shade: base
    // Return warning if color is invalid
    @if not map-has-key($colors, $color) {
        @warn 'There is no color mapped to "#{$color}"';
        @return null;
	}

    // Grab shade map for given color
    $color-map: map-get($colors, $color);
    // Return warning if shade is invalid
    @if not map-has-key($color-map, $shade) {
        @warn 'There is no "#{$shade}" for the color "#{$color}"';
        @return null;
	}

    // Return the proper shade
    @return map-get($color-map, $shade);
}
